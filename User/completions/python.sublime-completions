{
	"scope": "source.python",

	"completions":
	[
		{ "trigger": "encoding utf8", "contents": "#encoding: utf8" },
		{ "trigger": "kv\tkey: value", "contents": "'$1':$2" },

		{ "trigger": "import", "contents": "import" },
		{ "trigger": "from import", "contents": "from $1 import $2" },

		// 全局函数
		{ "trigger": "print", "contents": "print($1)" },

		// 类方法
		{ "trigger": "__init__", "contents": "def __init__(self):\n\t${0:pass}" },
		{ "trigger": "__getattr__", "contents": "def __getattr__(self, name):\n\t${0:return None}" },
		{ "trigger": "__setattr__", "contents": "def __getattr__(self, name, value):\n\t${0:pass}" },
		// { "trigger": "__new__", "contents": "def __new__(cls, args):\n\t${0:pass}" },
		// { "trigger": "__init__", "contents": "def __init__(self, args):\n\t${0:pass}" },
		// { "trigger": "__cmp__", "contents": "def __cmp__(self, other):\n\t${0:pass}" },
		// { "trigger": "__pos__", "contents": "def __pos__(self):\n\t${0:pass}" },
		// { "trigger": "__neg__", "contents": "def __neg__(self):\n\t${0:pass}" },
		// { "trigger": "__invert__", "contents": "def __invert__(self):\n\t${0:pass}" },
		// { "trigger": "__nonzero__", "contents": "def __nonzero__(self):\n\t${0:pass}" },
		// { "trigger": "__getattr__", "contents": "def __getattr__(self, name):\n\t${0:pass}" },
		// { "trigger": "__setattr__", "contents": "def __setattr__(self, name, val):\n\t${0:pass}" },
		// { "trigger": "__delattr__", "contents": "def __delattr__(self, name):\n\t${0:pass}" },
		// { "trigger": "__getattribute__", "contents": "def __getattribute__(self, name):\n\t${0:pass}" },
		// { "trigger": "__getitem__", "contents": "def __getitem__(self, key):\n\t${0:pass}" },
		// { "trigger": "__setitem__", "contents": "def __setitem__(self, key, val):\n\t${0:pass}" },
		// { "trigger": "__delitem__", "contents": "def __delitem__(self, key):\n\t${0:pass}" },
		// { "trigger": "__iter__", "contents": "def __iter__(self):\n\t${0:pass}" },
		// { "trigger": "__contains__", "contents": "def __contains__(self, value):\n\t${0:pass}" },
		// { "trigger": "__call__", "contents": "def __call__(self, args):\n\t${0:pass}" },
		// { "trigger": "__enter__", "contents": "def __enter__(self):\n\t${0:pass}" },
		// { "trigger": "__exit__", "contents": "def __exit__(self, exc, val, trace):\n\t${0:pass}" },

	]
}